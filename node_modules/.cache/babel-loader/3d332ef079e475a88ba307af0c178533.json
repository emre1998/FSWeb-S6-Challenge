{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EMRE CAN\\\\FSWeb-S6-Challenge\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Karakter from './components/Karakter';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [dataChars, setDataChars] = useState([]);\n  const [datafilms, setDataFilms] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const charactersPromise = axios('https://swapi.dev/api/people/');\n    const filmsPromise = axios('https://swapi.dev/api/films/');\n    const timeOutPromise = new Promise((resolve, reject) => {\n      setTimeout(resolve, 3000, \"foo\");\n    });\n    Promise.all([charactersPromise, filmsPromise, timeOutPromise]).then(values => {\n      console.log(values);\n      setDataChars(values[0].data);\n      setDataFilms(values[1].data[0].results);\n      setLoading(false);\n    });\n  }, []); // Try to think through what state you'll need for this app before starting. Then build out\n  // the state properties here.\n  // Fetch characters from the API in an effect hook. Remember, anytime you have a \n  // side effect in a component, you want to think about which state and/or props it should\n  // sync up with, if any.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"Header\",\n      children: \"Star Wars Characters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Y\\xFCkleniyor...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 19\n    }, this), !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Karakter, {\n        chars: dataChars,\n        films: datafilms\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"MApNLD/rMbIKcAny9uew9WSeQyk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/EMRE CAN/FSWeb-S6-Challenge/src/App.js"],"names":["React","useState","useEffect","Karakter","axios","App","dataChars","setDataChars","datafilms","setDataFilms","loading","setLoading","charactersPromise","filmsPromise","timeOutPromise","Promise","resolve","reject","setTimeout","all","then","values","console","log","data","results"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,SAAD,EAAWC,YAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,SAAD,EAAWC,YAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,OAAD,EAASC,UAAT,IAAsBV,QAAQ,CAAC,IAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAK;AACb,UAAMU,iBAAiB,GAAGR,KAAK,CAAC,+BAAD,CAA/B;AACA,UAAMS,YAAY,GAAGT,KAAK,CAAC,8BAAD,CAA1B;AAEA,UAAMU,cAAc,GAAG,IAAIC,OAAJ,CAAa,CAACC,OAAD,EAASC,MAAT,KAAmB;AAAEC,MAAAA,UAAU,CAACF,OAAD,EAAS,IAAT,EAAc,KAAd,CAAV;AAC1D,KADwB,CAAvB;AAEFD,IAAAA,OAAO,CAACI,GAAR,CAAY,CAACP,iBAAD,EAAmBC,YAAnB,EAAgCC,cAAhC,CAAZ,EAA6DM,IAA7D,CAAmEC,MAAD,IAAW;AAC3EC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAd,MAAAA,YAAY,CAACc,MAAM,CAAC,CAAD,CAAN,CAAUG,IAAX,CAAZ;AACAf,MAAAA,YAAY,CAACY,MAAM,CAAC,CAAD,CAAN,CAAUG,IAAV,CAAe,CAAf,EAAkBC,OAAnB,CAAZ;AACAd,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KALD;AAMC,GAZQ,EAYP,EAZO,CAAT,CALgB,CAoBhB;AACA;AAEA;AACA;AACA;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGD,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFd,EAGG,CAACA,OAAD,iBACD;AAAA,6BACA,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEJ,SAAjB;AAA4B,QAAA,KAAK,EAAEE;AAAnC;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CArCD;;GAAMH,G;;KAAAA,G;AAwCN,eAAeA,GAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport Karakter from './components/Karakter';\r\nimport axios from \"axios\";\r\n\r\nconst App = () => {\r\n  const [dataChars,setDataChars]= useState([]);\r\n  const [datafilms,setDataFilms]= useState([]);\r\n  const [loading,setLoading]= useState(true);\r\n\r\n  useEffect(()=> {\r\n    const charactersPromise = axios('https://swapi.dev/api/people/');\r\n    const filmsPromise = axios('https://swapi.dev/api/films/');\r\n\r\n    const timeOutPromise = new Promise ((resolve,reject)=> { setTimeout(resolve,3000,\"foo\");\r\n  });\r\n  Promise.all([charactersPromise,filmsPromise,timeOutPromise]).then((values)=> {\r\n    console.log(values);\r\n    setDataChars(values[0].data)\r\n    setDataFilms(values[1].data[0].results)\r\n    setLoading(false);\r\n  })\r\n  },[])\r\n  \r\n\r\n  // Try to think through what state you'll need for this app before starting. Then build out\r\n  // the state properties here.\r\n\r\n  // Fetch characters from the API in an effect hook. Remember, anytime you have a \r\n  // side effect in a component, you want to think about which state and/or props it should\r\n  // sync up with, if any.\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1 className=\"Header\">Star Wars Characters</h1> \r\n      {loading && <h1>YÃ¼kleniyor...</h1>}\r\n      {!loading &&(\r\n      <div>\r\n      <Karakter chars={dataChars} films={datafilms}/>\r\n      </div>)}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}