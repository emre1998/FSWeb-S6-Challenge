{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"C:/Users/EMRE CAN/FSWeb-S6-Challenge/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\n\nvar _classCallCheck = require(\"C:/Users/EMRE CAN/FSWeb-S6-Challenge/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"C:/Users/EMRE CAN/FSWeb-S6-Challenge/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.store = exports.PERSISTENCY_KEY = void 0;\n\nvar set_cookie_parser_1 = require(\"set-cookie-parser\");\n\nexports.PERSISTENCY_KEY = 'MSW_COOKIE_STORE';\n\nfunction supportsLocalStorage() {\n  try {\n    if (localStorage == null) {\n      return false;\n    }\n\n    localStorage.setItem('test', 'test');\n    localStorage.getItem('test');\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\n\nvar CookieStore = /*#__PURE__*/function () {\n  function CookieStore() {\n    _classCallCheck(this, CookieStore);\n\n    this.store = new Map();\n  }\n  /**\n   * Sets the given request cookies into the store.\n   * Respects the `request.credentials` policy.\n   */\n\n\n  _createClass(CookieStore, [{\n    key: \"add\",\n    value: function add(request, response) {\n      var _this = this;\n\n      if (request.credentials === 'omit') {\n        return;\n      }\n\n      var requestUrl = new URL(request.url);\n      var responseCookies = response.headers.get('set-cookie');\n\n      if (!responseCookies) {\n        return;\n      }\n\n      var now = Date.now();\n      var parsedResponseCookies = set_cookie_parser_1.parse(responseCookies).map(function (_a) {\n        var maxAge = _a.maxAge,\n            cookie = __rest(_a, [\"maxAge\"]);\n\n        return Object.assign(Object.assign({}, cookie), {\n          expires: maxAge === undefined ? cookie.expires : new Date(now + maxAge * 1000),\n          maxAge: maxAge\n        });\n      });\n      var prevCookies = this.store.get(requestUrl.origin) || new Map();\n      parsedResponseCookies.forEach(function (cookie) {\n        _this.store.set(requestUrl.origin, prevCookies.set(cookie.name, cookie));\n      });\n    }\n    /**\n     * Returns cookies relevant to the given request\n     * and its `request.credentials` policy.\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(request) {\n      this.deleteExpiredCookies();\n      var requestUrl = new URL(request.url);\n      var originCookies = this.store.get(requestUrl.origin) || new Map();\n\n      switch (request.credentials) {\n        case 'include':\n          {\n            var documentCookies = set_cookie_parser_1.parse(document.cookie);\n            documentCookies.forEach(function (cookie) {\n              originCookies.set(cookie.name, cookie);\n            });\n            return originCookies;\n          }\n\n        case 'same-origin':\n          {\n            return originCookies;\n          }\n\n        default:\n          return new Map();\n      }\n    }\n    /**\n     * Returns a collection of all stored cookies.\n     */\n\n  }, {\n    key: \"getAll\",\n    value: function getAll() {\n      this.deleteExpiredCookies();\n      return this.store;\n    }\n    /**\n     * Deletes all cookies associated with the given request.\n     */\n\n  }, {\n    key: \"deleteAll\",\n    value: function deleteAll(request) {\n      var requestUrl = new URL(request.url);\n      this.store.delete(requestUrl.origin);\n    }\n    /**\n     * Clears the entire cookie store.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.store.clear();\n    }\n    /**\n     * Hydrates the virtual cookie store from the `localStorage` if defined.\n     */\n\n  }, {\n    key: \"hydrate\",\n    value: function hydrate() {\n      var _this2 = this;\n\n      if (!supportsLocalStorage()) {\n        return;\n      }\n\n      var persistedCookies = localStorage.getItem(exports.PERSISTENCY_KEY);\n\n      if (!persistedCookies) {\n        return;\n      }\n\n      try {\n        var parsedCookies = JSON.parse(persistedCookies);\n        parsedCookies.forEach(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              origin = _ref2[0],\n              cookies = _ref2[1];\n\n          _this2.store.set(origin, new Map(cookies.map(function (_a) {\n            var _a2 = _slicedToArray(_a, 2),\n                token = _a2[0],\n                _b = _a2[1],\n                expires = _b.expires,\n                cookie = __rest(_b, [\"expires\"]);\n\n            return [token, expires === undefined ? cookie : Object.assign(Object.assign({}, cookie), {\n              expires: new Date(expires)\n            })];\n          })));\n        });\n      } catch (error) {\n        console.warn(\"\\n[virtual-cookie] Failed to parse a stored cookie from the localStorage (key \\\"\".concat(exports.PERSISTENCY_KEY, \"\\\").\\n\\nStored value:\\n\").concat(localStorage.getItem(exports.PERSISTENCY_KEY), \"\\n\\nThrown exception:\\n\").concat(error, \"\\n\\nInvalid value has been removed from localStorage to prevent subsequent failed parsing attempts.\"));\n        localStorage.removeItem(exports.PERSISTENCY_KEY);\n      }\n    }\n    /**\n     * Persists the current virtual cookies into the `localStorage` if defined,\n     * so they are available on the next page load.\n     */\n\n  }, {\n    key: \"persist\",\n    value: function persist() {\n      if (!supportsLocalStorage()) {\n        return;\n      }\n\n      var serializedCookies = Array.from(this.store.entries()).map(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            origin = _ref4[0],\n            cookies = _ref4[1];\n\n        return [origin, Array.from(cookies.entries())];\n      });\n      localStorage.setItem(exports.PERSISTENCY_KEY, JSON.stringify(serializedCookies));\n    }\n  }, {\n    key: \"deleteExpiredCookies\",\n    value: function deleteExpiredCookies() {\n      var _this3 = this;\n\n      var now = Date.now();\n      this.store.forEach(function (originCookies, origin) {\n        originCookies.forEach(function (_ref5) {\n          var expires = _ref5.expires,\n              name = _ref5.name;\n\n          if (expires !== undefined && expires.getTime() <= now) {\n            originCookies.delete(name);\n          }\n        });\n\n        if (originCookies.size === 0) {\n          _this3.store.delete(origin);\n        }\n      });\n    }\n  }]);\n\n  return CookieStore;\n}();\n\nexports.store = new CookieStore();","map":{"version":3,"sources":["C:/Users/EMRE CAN/FSWeb-S6-Challenge/node_modules/@mswjs/cookies/lib/CookieStore.js"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","defineProperty","exports","value","store","PERSISTENCY_KEY","set_cookie_parser_1","require","supportsLocalStorage","localStorage","setItem","getItem","error","CookieStore","Map","request","response","credentials","requestUrl","URL","url","responseCookies","headers","get","now","Date","parsedResponseCookies","parse","map","_a","maxAge","cookie","assign","expires","undefined","prevCookies","origin","forEach","set","name","deleteExpiredCookies","originCookies","documentCookies","document","delete","clear","persistedCookies","parsedCookies","JSON","cookies","token","_b","console","warn","removeItem","serializedCookies","Array","from","entries","stringify","getTime","size"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.store = exports.PERSISTENCY_KEY = void 0;\nconst set_cookie_parser_1 = require(\"set-cookie-parser\");\nexports.PERSISTENCY_KEY = 'MSW_COOKIE_STORE';\nfunction supportsLocalStorage() {\n    try {\n        if (localStorage == null) {\n            return false;\n        }\n        localStorage.setItem('test', 'test');\n        localStorage.getItem('test');\n        return true;\n    }\n    catch (error) {\n        return false;\n    }\n}\nclass CookieStore {\n    constructor() {\n        this.store = new Map();\n    }\n    /**\n     * Sets the given request cookies into the store.\n     * Respects the `request.credentials` policy.\n     */\n    add(request, response) {\n        if (request.credentials === 'omit') {\n            return;\n        }\n        const requestUrl = new URL(request.url);\n        const responseCookies = response.headers.get('set-cookie');\n        if (!responseCookies) {\n            return;\n        }\n        const now = Date.now();\n        const parsedResponseCookies = set_cookie_parser_1.parse(responseCookies).map((_a) => {\n            var { maxAge } = _a, cookie = __rest(_a, [\"maxAge\"]);\n            return (Object.assign(Object.assign({}, cookie), { expires: maxAge === undefined ? cookie.expires : new Date(now + maxAge * 1000), maxAge }));\n        });\n        const prevCookies = this.store.get(requestUrl.origin) || new Map();\n        parsedResponseCookies.forEach((cookie) => {\n            this.store.set(requestUrl.origin, prevCookies.set(cookie.name, cookie));\n        });\n    }\n    /**\n     * Returns cookies relevant to the given request\n     * and its `request.credentials` policy.\n     */\n    get(request) {\n        this.deleteExpiredCookies();\n        const requestUrl = new URL(request.url);\n        const originCookies = this.store.get(requestUrl.origin) || new Map();\n        switch (request.credentials) {\n            case 'include': {\n                const documentCookies = set_cookie_parser_1.parse(document.cookie);\n                documentCookies.forEach((cookie) => {\n                    originCookies.set(cookie.name, cookie);\n                });\n                return originCookies;\n            }\n            case 'same-origin': {\n                return originCookies;\n            }\n            default:\n                return new Map();\n        }\n    }\n    /**\n     * Returns a collection of all stored cookies.\n     */\n    getAll() {\n        this.deleteExpiredCookies();\n        return this.store;\n    }\n    /**\n     * Deletes all cookies associated with the given request.\n     */\n    deleteAll(request) {\n        const requestUrl = new URL(request.url);\n        this.store.delete(requestUrl.origin);\n    }\n    /**\n     * Clears the entire cookie store.\n     */\n    clear() {\n        this.store.clear();\n    }\n    /**\n     * Hydrates the virtual cookie store from the `localStorage` if defined.\n     */\n    hydrate() {\n        if (!supportsLocalStorage()) {\n            return;\n        }\n        const persistedCookies = localStorage.getItem(exports.PERSISTENCY_KEY);\n        if (!persistedCookies) {\n            return;\n        }\n        try {\n            const parsedCookies = JSON.parse(persistedCookies);\n            parsedCookies.forEach(([origin, cookies]) => {\n                this.store.set(origin, new Map(cookies.map((_a) => {\n                    var [token, _b] = _a, { expires } = _b, cookie = __rest(_b, [\"expires\"]);\n                    return [\n                        token,\n                        expires === undefined\n                            ? cookie\n                            : Object.assign(Object.assign({}, cookie), { expires: new Date(expires) }),\n                    ];\n                })));\n            });\n        }\n        catch (error) {\n            console.warn(`\n[virtual-cookie] Failed to parse a stored cookie from the localStorage (key \"${exports.PERSISTENCY_KEY}\").\n\nStored value:\n${localStorage.getItem(exports.PERSISTENCY_KEY)}\n\nThrown exception:\n${error}\n\nInvalid value has been removed from localStorage to prevent subsequent failed parsing attempts.`);\n            localStorage.removeItem(exports.PERSISTENCY_KEY);\n        }\n    }\n    /**\n     * Persists the current virtual cookies into the `localStorage` if defined,\n     * so they are available on the next page load.\n     */\n    persist() {\n        if (!supportsLocalStorage()) {\n            return;\n        }\n        const serializedCookies = Array.from(this.store.entries()).map(([origin, cookies]) => {\n            return [origin, Array.from(cookies.entries())];\n        });\n        localStorage.setItem(exports.PERSISTENCY_KEY, JSON.stringify(serializedCookies));\n    }\n    deleteExpiredCookies() {\n        const now = Date.now();\n        this.store.forEach((originCookies, origin) => {\n            originCookies.forEach(({ expires, name }) => {\n                if (expires !== undefined && expires.getTime() <= now) {\n                    originCookies.delete(name);\n                }\n            });\n            if (originCookies.size === 0) {\n                this.store.delete(origin);\n            }\n        });\n    }\n}\nexports.store = new CookieStore();\n"]},"metadata":{},"sourceType":"script"}