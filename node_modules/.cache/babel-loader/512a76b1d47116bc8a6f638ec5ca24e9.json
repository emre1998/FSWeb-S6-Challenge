{"ast":null,"code":"import _slicedToArray from\"C:/Users/EMRE CAN/FSWeb-S6-Challenge/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import Karakter from'./components/Karakter';import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),dataChars=_useState2[0],setDataChars=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),datafilms=_useState4[0],setDataFilms=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),loading=_useState6[0],setLoading=_useState6[1];useEffect(function(){var charactersPromise=axios('https://swapi.dev/api/people/');var filmsPromise=axios('https://swapi.dev/api/films/');var timeOutPromise=new Promise(function(resolve,reject){setTimeout(resolve,3000,\"foo\");});Promise.all([charactersPromise,filmsPromise,timeOutPromise]).then(function(values){console.log(values);setDataChars(values[0].data);setDataFilms(values[1].data[0].results);setLoading(false);});},[]);// Try to think through what state you'll need for this app before starting. Then build out\n// the state properties here.\n// Fetch characters from the API in an effect hook. Remember, anytime you have a \n// side effect in a component, you want to think about which state and/or props it should\n// sync up with, if any.\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"Header\",children:\"Star Wars Characters\"}),loading&&/*#__PURE__*/_jsx(\"h1\",{children:\"Y\\xFCkleniyor...\"}),!loading&&/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Karakter,{chars:dataChars,films:datafilms})})]});};export default App;","map":{"version":3,"sources":["C:/Users/EMRE CAN/FSWeb-S6-Challenge/src/App.js"],"names":["React","useState","useEffect","Karakter","axios","App","dataChars","setDataChars","datafilms","setDataFilms","loading","setLoading","charactersPromise","filmsPromise","timeOutPromise","Promise","resolve","reject","setTimeout","all","then","values","console","log","data","results"],"mappings":"0HAAA,MAAOA,CAAAA,KAAP,EAAcC,QAAd,CAAuBC,SAAvB,KAAuC,OAAvC,CACA,MAAOC,CAAAA,QAAP,KAAqB,uBAArB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,wFAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,CAChB,cAAgCJ,QAAQ,CAAC,EAAD,CAAxC,wCAAOK,SAAP,eAAiBC,YAAjB,eACA,eAAgCN,QAAQ,CAAC,EAAD,CAAxC,yCAAOO,SAAP,eAAiBC,YAAjB,eACA,eAA4BR,QAAQ,CAAC,IAAD,CAApC,yCAAOS,OAAP,eAAeC,UAAf,eAEAT,SAAS,CAAC,UAAK,CACb,GAAMU,CAAAA,iBAAiB,CAAGR,KAAK,CAAC,+BAAD,CAA/B,CACA,GAAMS,CAAAA,YAAY,CAAGT,KAAK,CAAC,8BAAD,CAA1B,CAEA,GAAMU,CAAAA,cAAc,CAAG,GAAIC,CAAAA,OAAJ,CAAa,SAACC,OAAD,CAASC,MAAT,CAAmB,CAAEC,UAAU,CAACF,OAAD,CAAS,IAAT,CAAc,KAAd,CAAV,CAC1D,CADwB,CAAvB,CAEFD,OAAO,CAACI,GAAR,CAAY,CAACP,iBAAD,CAAmBC,YAAnB,CAAgCC,cAAhC,CAAZ,EAA6DM,IAA7D,CAAkE,SAACC,MAAD,CAAW,CAC3EC,OAAO,CAACC,GAAR,CAAYF,MAAZ,EACAd,YAAY,CAACc,MAAM,CAAC,CAAD,CAAN,CAAUG,IAAX,CAAZ,CACAf,YAAY,CAACY,MAAM,CAAC,CAAD,CAAN,CAAUG,IAAV,CAAe,CAAf,EAAkBC,OAAnB,CAAZ,CACAd,UAAU,CAAC,KAAD,CAAV,CACD,CALD,EAMC,CAZQ,CAYP,EAZO,CAAT,CAeA;AACA;AAEA;AACA;AACA;AAEA,mBACE,aAAK,SAAS,CAAC,KAAf,wBACE,WAAI,SAAS,CAAC,QAAd,kCADF,CAEGD,OAAO,eAAI,wCAFd,CAGG,CAACA,OAAD,eACD,kCACA,KAAC,QAAD,EAAU,KAAK,CAAEJ,SAAjB,CAA4B,KAAK,CAAEE,SAAnC,EADA,EAJF,GADF,CAUD,CArCD,CAwCA,cAAeH,CAAAA,GAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport Karakter from './components/Karakter';\r\nimport axios from \"axios\";\r\n\r\nconst App = () => {\r\n  const [dataChars,setDataChars]= useState([]);\r\n  const [datafilms,setDataFilms]= useState([]);\r\n  const [loading,setLoading]= useState(true);\r\n\r\n  useEffect(()=> {\r\n    const charactersPromise = axios('https://swapi.dev/api/people/');\r\n    const filmsPromise = axios('https://swapi.dev/api/films/');\r\n\r\n    const timeOutPromise = new Promise ((resolve,reject)=> { setTimeout(resolve,3000,\"foo\");\r\n  });\r\n  Promise.all([charactersPromise,filmsPromise,timeOutPromise]).then((values)=> {\r\n    console.log(values);\r\n    setDataChars(values[0].data)\r\n    setDataFilms(values[1].data[0].results)\r\n    setLoading(false);\r\n  })\r\n  },[])\r\n  \r\n\r\n  // Try to think through what state you'll need for this app before starting. Then build out\r\n  // the state properties here.\r\n\r\n  // Fetch characters from the API in an effect hook. Remember, anytime you have a \r\n  // side effect in a component, you want to think about which state and/or props it should\r\n  // sync up with, if any.\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1 className=\"Header\">Star Wars Characters</h1> \r\n      {loading && <h1>YÃ¼kleniyor...</h1>}\r\n      {!loading &&(\r\n      <div>\r\n      <Karakter chars={dataChars} films={datafilms}/>\r\n      </div>)}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}